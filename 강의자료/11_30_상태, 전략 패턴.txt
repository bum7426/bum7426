상태패턴 - 다형성에서 무기편
유지보수

전략패턴
확장성


상태 패턴 ( 상태 표현 객체 ) - 객체를 상태에 따라 객체 자체 상태를 바꾸는 패턴

추가, 삭제에 용이하므로 유지보수가 용이함  ( 기존의 형태가 변화하지 않음 )

씬을 구성하는 씬 관리에서 많이 사용함.



1. 전략패턴( Strategy Pattern ) 이란?
 
동일 계열의 알고리즘군을 정의하고, 각 알고리즘을 캡슐화하는 패턴 

알고리즘을 사용하는 클래스들은 해당 알고리즘을 다양하게 변경할 수 있고, 

해당 알고리즘은 알고리즘을 사용하는 클래스와는 독립적으로 구현 한것


2. 전략패턴 사용시 장점 

a. 알고리즘을 실시간으로 변경이 가능하다.

b. 상속을 사용하지 않아 클래스나 알고리즘간의 결합력이 약하다.

c. 조건문의 양의 줄어 든다. ( 속도 향상 및 소스의 간략화에 이점이 생긴다. )


3. 구현시 특징

a. 알고리즘을 하나로 묶을 수 있는 추상 클래스가 필요하다.

b. 알고리즘을 사용하는 클래스들은 해당 알고리즘의 추상 클래스 포인터가 필요하다.


git-scm.com
https://tortoisegit.org/
github.com